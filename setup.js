#!/usr/bin/env node

/**
 * Setup Script for Pterodactyl Telegram Bot
 * Author: Pablos (@ImTamaa)
 */

const fs = require('fs');
const readline = require('readline');

const rl = readline.createInterface({
    input: process.stdin,
    output: process.stdout
});

console.log('🚀 Pterodactyl Telegram Bot - Setup');
console.log('===================================');
console.log('');

function question(prompt) {
    return new Promise((resolve) => {
        rl.question(prompt, resolve);
    });
}

async function setup() {
    console.log('Please provide the following information:');
    console.log('');

    const botToken = await question('🤖 Bot Token: ');
    const ownerId = await question('👤 Your Telegram ID: ');
    const panelUrl = await question('🌐 Pterodactyl Panel URL: ');
    const appKey = await question('🔑 Application API Key: ');
    const clientKey = await question('🔑 Client API Key: ');

    console.log('');
    console.log('📋 Configuration Summary:');
    console.log(`   Bot Token: ${botToken.substring(0, 10)}...`);
    console.log(`   Owner ID: ${ownerId}`);
    console.log(`   Panel URL: ${panelUrl}`);
    console.log(`   App Key: ${appKey.substring(0, 15)}...`);
    console.log(`   Client Key: ${clientKey.substring(0, 15)}...`);
    console.log('');

    const confirm = await question('Save configuration? (y/n): ');
    
    if (confirm.toLowerCase() !== 'y') {
        console.log('❌ Setup cancelled.');
        rl.close();
        return;
    }

    // Create .env file
    const envContent = `# Pterodactyl Telegram Bot Configuration
# Generated by setup script

# Bot Configuration
BOT_TOKEN=${botToken}
BOT_USERNAME=pterodactyl_control_bot
OWNER_TELEGRAM_ID=${ownerId}

# Pterodactyl Panel Configuration
PTERODACTYL_PANEL_URL=${panelUrl}
PTERODACTYL_APPLICATION_API_KEY=${appKey}
PTERODACTYL_CLIENT_API_KEY=${clientKey}

# Optional Settings
LOG_LEVEL=INFO
DEBUG_MODE=false

# Author Information
AUTHOR_NAME=Pablos
AUTHOR_TELEGRAM=@ImTamaa
`;

    try {
        fs.writeFileSync('.env', envContent);
        console.log('✅ Configuration saved to .env file');
        console.log('');
        console.log('🎉 Setup completed successfully!');
        console.log('');
        console.log('📝 Next steps:');
        console.log('1. Install dependencies: npm install');
        console.log('2. Run health check: npm run health');
        console.log('3. Start the bot: npm start');
        console.log('4. Send /start to your Telegram bot');
        console.log('');
        console.log('🚀 Happy botting!');
    } catch (error) {
        console.error('❌ Failed to save configuration:', error.message);
    }

    rl.close();
}

setup().catch(error => {
    console.error('❌ Setup failed:', error.message);
    rl.close();
});
